package ru.vad.round;

import java.awt.BorderLayout;
import java.awt.Choice;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.text.BadLocationException;

public class Round extends JFrame {

	public void frontend() {
		JButton cons = new JButton("consider");

		JTextField text_deg = new JTextField(4);
		JTextField rad_txt = new JTextField(4);

		setLayout(new BorderLayout());

		JTextField input = new JTextField(4);

		JLabel deg = new JLabel("Градусы");
		JLabel rad = new JLabel("Радианы");

		Choice all_trigeometry = new Choice();

		JPanel for_value = new JPanel();
		JPanel for_round = new JPanel();

		for_value.add(deg);
		for_value.add(text_deg);
		for_value.add(rad);
		for_value.add(rad_txt);
		for_value.add(all_trigeometry);

		for_round.add(input);
		for_round.add(cons);

		all_trigeometry.add("sin");
		all_trigeometry.add("cos");
		all_trigeometry.add("tg");		

		add(for_value, "North");
		add(for_round, "South");

		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setTitle("Round Pi");
		setLocation(500, 400);
		pack();
		
		

		class listener implements ActionListener {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (all_trigeometry.getSelectedIndex() == 0) {					
					double f = sinn(Double.parseDouble(input.getText()));					
					text_deg.setText(Double.toString(f));
					
					if(text_deg.getText().length()>5){
						text_deg.setText(" ");
					}
					
				} else if (all_trigeometry.getSelectedIndex() == 1) {
					
					double f = cosn(Double.parseDouble(input.getText()));
					text_deg.setText(Double.toString(f));					
					
						try {
							text_deg.getText(5, 5);
						} catch (BadLocationException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
					
					
				} else if (all_trigeometry.getSelectedIndex() == 2) {
					
					double f = tgen(Double.parseDouble(input.getText()));
					text_deg.setText(Double.toString(f));
					
					if(text_deg.getText().length()>5){
						text_deg.setText(" ");
					}
				}
			}

		}
		
		cons.addActionListener(new listener());

	};

	static public double sinn(double sin) {
		return sin = Math.sin(sin);
	}

	static public double cosn(double cos) {
		return cos = Math.cos(cos);
	}

	static public double tgen(double tg) {
		return tg = Math.tan(tg);
	}

}
